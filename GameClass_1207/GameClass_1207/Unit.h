#pragma once
#include <iostream>

using namespace std;

//클래스에는 보통 이름 앞에 C를 붙여준다. ex) CUnit
class Unit
{

	/*
		상속 : 객체지향 프로그램의 근간이 된다.
		서브클래싱, 확장..
		부모-> 자식

		클래스 간의 상소관계를 맺을때는 공통의 기능을 상위 클래스에 묶어넣어 다른 클래스로 확장 할 수 있게 하는 것이 목적

		이유 : 프로그램 변경에 대응을 유영하게 할 수 있다.
		기능을 추가함에 따른 프로그램 확장도 편리하다.

		ex)사람클래스
		-이름,나이,등등등.... 속성들이 존재함. // 멤버변수
		-게임하기, 걷기, 밥먹기..술먹기 // 멤버함수

		ex)학생클래스
		-이름,나이,등등등.... 속성들이 존재함. // 멤버변수
		-게임하기, 걷기, 밥먹기..술먹기 // 멤버함수

		-공통적으로 가지고 있는 속성과 행동이 있다면 몰려받아서 사용하는 것이 좋다.

	*/
private:
	//멤버변수
	//부모 자식으로 호출 
	//자식 부모로 호출 

	int privateMoney; // 비자금

protected:
	//상속관계에서만 허용
	int familyMoney;

public:
	//멤버함수
	int publicMoney;	//아무나  주울 수 있는 돈

public:
	Unit();//생성자나 소멸자는 공개되어야한다.
	~Unit();

	void Init();
};

